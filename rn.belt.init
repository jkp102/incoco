.PROGRAM rn.belt.init()
; 1) queue 배열 생성
; 2) belt 엔코더 불러오고 초기화 설정
; 3) latch 신호 변수 설정
        
        AUTO REAL i, j ; Wait until queue is free, and lock it
        AUTO REAL latch.num

        PARAMETER BELT.MODE = 0         ; Bit 1= no program stop by window errors

        q.locked = FALSE

     ;Initialie Part Queue
        FOR i = 0 TO max.que.size-1         ; lch.queue[0~999, 1~4] 배열 생성
            lch.queue[i,que.beltpos] = 0    ;  ,1
            lch.queue[i,que.partok] = 0     ;  ,2
            lch.queue[i,que.state] = 0      ;  ,3
            lch.queue[i,que.alter] = 0      ;  ,4
        END

      ;Initialize PLC Trigger Queue
        FOR i = 0 TO max.trig.size-1        ; trig.queue[0~999,1 or 3] 배열 생성
            trig.queue[i,que.beltpos] = 0
            trig.queue[i,que.state] = 0
        END

           ;Load Belt Calibration
        CALL load.belt($beltcal, cal[], %pick.belt[], belt.pk.scale[], belt.nom.loc[], belt.win1[], belt.win2[], $error)

; Initialize the belt window
;        IF $error <> "" THEN
;            TYPE "BELT CALIBRATION ERROR : ", $error
;            rt.stop = TRUE
;            HALT
;        END

; Configure encoder.Initialize a device or set device parameters.
;Coomand  = 0 : Initialize Device
;         =
        SETDEVICE (0, belt.pk.encoder-1, , 0)    ; 불러온 Belt Encoder 초기화

        latch.num = ABS(LATCHED(-belt.pk.encoder)) ; latch.num=1001 -> 현재 latch 신호의 Input번호를 latch.num에 지정

        WHILE latch.num <> 0 DO
            WAIT
            latch.num = ABS(LATCHED(-belt.pk.encoder))
            IF rt.stop THEN
                GOTO 100
            END
        END

 100    RETURN

.END
